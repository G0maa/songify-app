version: '3.1'
services:
  db:
    image: postgres:16rc1-alpine3.18
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # networks:
    #   - elastic
    container_name: songify-dev-db
    ports:
      - 5432:5432
  messageQueue:
    image: rabbitmq:3.10-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    container_name: songify-dev-message-queue
    ports:
      - 5672:5672
      - 15672:15672
  # Extras for elasticsearch
  # api:
  #   image: songify-api-img
  #   depends_on:
  #     - db
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   environment:
  #     - DATABASE_URL=postgres://root:sekret@songify-dev-db:5432/postgres?schema=public
  #   ports:
  #     - 8080:8080
  # metricbeat:
  #   image: docker.elastic.co/beats/metricbeat-oss:8.7.0
  #   user: root
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./elastic-search/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
  #   networks:
  #     - elastic
  #   container_name: songify-dev-metricbeat
  # filebeat:
  #   image: docker.elastic.co/beats/filebeat-oss:8.7.0
  #   user: root
  #   volumes:
  #     - /var/log/containers:/var/log/containers
  #     - ./elastic-search/filebeat.yml:/usr/share/filebeat/filebeat.yml
  #   networks:
  #     - elastic
  #   container_name: songify-dev-filebeat
# Note: This netowrk has to be created.
# networks:
#   elastic:
#     external: true
